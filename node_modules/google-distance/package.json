{
  "name": "google-distance",
  "version": "0.2.1",
  "main": "index",
  "description": "A simple node.js wrapper for Google's Distance Matrix API",
  "author": {
    "name": "Edward Look",
    "email": "edwlook@gmail.com",
    "url": "http://edward.land/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/edwlook/node-google-distance.git"
  },
  "keywords": [
    "google",
    "maps",
    "distance",
    "matrix",
    "api"
  ],
  "dependencies": {
    "request": "~2.34.0"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "chai": "~1.9.1"
  },
  "scripts": {
    "test": "mocha --timeout 10000 test/*.js"
  },
  "readme": "# Google Distance Matrix API for Node.js\n[![Build Status](https://travis-ci.org/edwlook/node-google-distance.svg?branch=master)](https://travis-ci.org/edwlook/node-google-distance)\n\nEasily get traveling distance and duration data between locations with the [Google Distance Matrix API](https://developers.google.com/maps/documentation/distancematrix/)\n\n## Installation\n\n    npm install google-distance\n\n## Usage\n```js\nvar distance = require('google-distance');\n\ndistance.get(\n  {\n    origin: 'San Francisco, CA',\n    destination: 'San Diego, CA'\n  },\n  function(err, data) {\n    if (err) return console.log(err);\n    console.log(data);\n});\n```\nThe above example outputs the following `data` object:\n```js\n{\n  index: null,\n  distance: '807 km',\n  distanceValue: 807366,\n  duration: '7 hours 30 mins',\n  durationValue: 26981,\n  origin: 'San Francisco, CA, USA',\n  destination: 'San Diego, CA, USA',\n  mode: 'driving',\n  units: 'metric',\n  language: 'en',\n  avoid: null,\n  sensor: false\n}\n```\n## Additional Parameters\n\nHere is a full list of options you can include to tailor your query:\n\n* origin, destination - `name` (eg. `'San Francisco, CA'`) | `latitude/longitude` (eg. `'51.510652,-0.095444'`)\n* index - `null` (default) | specify an index for identification\n* mode - `'driving'` (default) | `'walking'` | `'bicycling'`\n* units - `'metric'` (default) kilometers/meters | `'imperial'` miles/feet\n* language - `'en'` (default) | [more languages](https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&gid=1)\n* avoid - `null` (default) | `'highways'` | `'tolls'`\n* sensor - `false` (default) | `true` | determines if GPS is used to find user location\n\nNote: The `units` setting only affects the text displayed within `distance` fields.\n\n`distanceValue` is always in meters, and `durationValue` is always in seconds.\n\n## More Examples\n\nThis example specifies `mode` and `units`:\n\n```js\ndistance.get(\n  {\n    origin: 'San Francisco, CA',\n    destination: 'Los Angeles, CA',\n    mode: 'bicycling',\n    units: 'imperial'\n  },\n  function(err, data) {\n    if (err) return console.log(err);\n    console.log(data);\n});\n```\n\nOutputs:\n\n```js\n{\n  index: null,\n  distance: '499 mi',\n  distanceValue: 802534,\n  duration: '1 day 21 hours',\n  durationValue: 161896,\n  origin: 'San Francisco, CA, USA',\n  destination: 'Los Angeles, CA, USA',\n  mode: 'bicycling',\n  units: 'imperial',\n  language: 'en',\n  avoid: null,\n  sensor: false\n}\n```\n\n***\n\nLet's use latitude and longitude for our origin/destination and an index:\n\n```js\ndistance.get(\n{\n  index: 1,\n  origin: '37.772886,-122.423771',\n  destination: '37.871601,-122.269104'\n},\nfunction(err, data) {\n  if (err) return console.log(err);\n  console.log(data);\n});\n```\n\nOutputs:\n\n```js\n{\n  index: 1,\n  distance: '21.9 km',\n  distanceValue: 21946,\n  duration: '21 mins',\n  durationValue: 1251,\n  origin: 'Octavia Boulevard, San Francisco, CA 94102, USA',\n  destination: '2066-2070 University Avenue, Berkeley, CA 94704, USA',\n  mode: 'driving',\n  units: 'metric',\n  language: 'en',\n  avoid: null,\n  sensor: false\n}\n```\n\n## API Keys\n\nUsing an API key is not required, but recommended since you can track your usage and make sure you don't exceed [Google's quota](https://developers.google.com/maps/documentation/distancematrix/#Limits). You can request a key from Google [here](https://console.developers.google.com).\n\nSpecify an API key for use like this:\n\n```js\nvar distance = require('google-distance');\ndistance.apiKey = 'API_KEY';\n```\n\nBusiness users can omit the API key and instead specify their business client and signature keys:\n\n```js\nvar distance = require('google-distance');\ndistance.businessClientKey = 'CLIENT_KEY';\ndistance.businessSignatureKey = 'SIGNATURE_KEY';\n```\n\n## Running Tests\n\n1) Install the development dependencies:\n\n    npm install\n\n2) Run the tests:\n\n    npm test\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/edwlook/node-google-distance/issues"
  },
  "homepage": "https://github.com/edwlook/node-google-distance",
  "_id": "google-distance@0.2.1",
  "_shasum": "c1ffcaf1150c235deac33ccaca75685f329244d3",
  "_from": "google-distance@^0.2.1",
  "_resolved": "https://registry.npmjs.org/google-distance/-/google-distance-0.2.1.tgz"
}
